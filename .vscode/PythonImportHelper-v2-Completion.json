[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "build",
        "importPath": "googleapiclient.discovery",
        "description": "googleapiclient.discovery",
        "isExtraImport": true,
        "detail": "googleapiclient.discovery",
        "documentation": {}
    },
    {
        "label": "HttpError",
        "importPath": "googleapiclient.errors",
        "description": "googleapiclient.errors",
        "isExtraImport": true,
        "detail": "googleapiclient.errors",
        "documentation": {}
    },
    {
        "label": "tqdm",
        "importPath": "tqdm",
        "description": "tqdm",
        "isExtraImport": true,
        "detail": "tqdm",
        "documentation": {}
    },
    {
        "label": "YouTubeTranscriptApi",
        "importPath": "youtube_transcript_api",
        "description": "youtube_transcript_api",
        "isExtraImport": true,
        "detail": "youtube_transcript_api",
        "documentation": {}
    },
    {
        "label": "TRANSCRIPTS_DIR",
        "kind": 5,
        "importPath": "src.analytics",
        "description": "src.analytics",
        "peekOfCode": "TRANSCRIPTS_DIR = os.path.join(os.getcwd(), \"transcripts\")\n# open each txt file in TRANSCRIPTS_DIR and count the number of words\nword_count = {}\nfor file in os.listdir(TRANSCRIPTS_DIR):\n    if file.endswith(\".txt\"):\n        with open(os.path.join(TRANSCRIPTS_DIR, file), \"r\", encoding=\"utf-8\") as f:\n            word_count[file] = len(f.read().split())\nprint(word_count)\nprint(f\"Total number of words: {sum(word_count.values())}\")",
        "detail": "src.analytics",
        "documentation": {}
    },
    {
        "label": "word_count",
        "kind": 5,
        "importPath": "src.analytics",
        "description": "src.analytics",
        "peekOfCode": "word_count = {}\nfor file in os.listdir(TRANSCRIPTS_DIR):\n    if file.endswith(\".txt\"):\n        with open(os.path.join(TRANSCRIPTS_DIR, file), \"r\", encoding=\"utf-8\") as f:\n            word_count[file] = len(f.read().split())\nprint(word_count)\nprint(f\"Total number of words: {sum(word_count.values())}\")",
        "detail": "src.analytics",
        "documentation": {}
    },
    {
        "label": "get_channel_id",
        "kind": 2,
        "importPath": "src.ytb_scraper",
        "description": "src.ytb_scraper",
        "peekOfCode": "def get_channel_id(channel_name):\n    \"\"\"\n    Retrieves the id of a youtube channel from its channel name.\n    Args:\n      channel_name: Name of the youtube channel which is not the full name of channel but the name after the '@'\n                    the channel link.\n    Returns:\n      The id of of the given channel.\n    \"\"\"\n    url = \"https://www.youtube.com/@\" + channel_name",
        "detail": "src.ytb_scraper",
        "documentation": {}
    },
    {
        "label": "fetch_video_ids",
        "kind": 2,
        "importPath": "src.ytb_scraper",
        "description": "src.ytb_scraper",
        "peekOfCode": "def fetch_video_ids(channel_name):\n    \"\"\"\n    Fetches the video IDs of the videos in the uploads playlist of a channel.\n    Args:\n      channel_name: The name of the channel.\n    Returns:\n      A list of {video ID, video url, title}.\n    \"\"\"\n    # Make a request to youtube api\n    base_url = \"https://www.googleapis.com/youtube/v3/channels\"",
        "detail": "src.ytb_scraper",
        "documentation": {}
    },
    {
        "label": "save_transcript",
        "kind": 2,
        "importPath": "src.ytb_scraper",
        "description": "src.ytb_scraper",
        "peekOfCode": "def save_transcript(video_id, file_name):\n    \"\"\"\n    Saves the transcript of a video in a file.\n    Args:\n      transcript: The transcript of the video.\n      file_name: The name of the file in which the transcript will be saved.\n    Returns:\n        True if the transcript was saved successfully, False otherwise.\n    \"\"\"\n    try:",
        "detail": "src.ytb_scraper",
        "documentation": {}
    },
    {
        "label": "api_key",
        "kind": 5,
        "importPath": "src.ytb_scraper",
        "description": "src.ytb_scraper",
        "peekOfCode": "api_key = os.getenv(\"YTB_API_KEY\")\nyoutube = build(\"youtube\", \"v3\", developerKey=api_key)\ndef get_channel_id(channel_name):\n    \"\"\"\n    Retrieves the id of a youtube channel from its channel name.\n    Args:\n      channel_name: Name of the youtube channel which is not the full name of channel but the name after the '@'\n                    the channel link.\n    Returns:\n      The id of of the given channel.",
        "detail": "src.ytb_scraper",
        "documentation": {}
    },
    {
        "label": "youtube",
        "kind": 5,
        "importPath": "src.ytb_scraper",
        "description": "src.ytb_scraper",
        "peekOfCode": "youtube = build(\"youtube\", \"v3\", developerKey=api_key)\ndef get_channel_id(channel_name):\n    \"\"\"\n    Retrieves the id of a youtube channel from its channel name.\n    Args:\n      channel_name: Name of the youtube channel which is not the full name of channel but the name after the '@'\n                    the channel link.\n    Returns:\n      The id of of the given channel.\n    \"\"\"",
        "detail": "src.ytb_scraper",
        "documentation": {}
    }
]